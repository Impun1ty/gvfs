2007-11-01  Alexander Larsson  <alexl@redhat.com>

        * client/gdaemonfile.c:
        * client/gdaemonvfs.[ch]:
	Implement get_uri_scheme
	
        * daemon/mount.c:
	Add needed includes

2007-10-31  Alexander Larsson  <alexl@redhat.com>

        * client/gdaemonfile.c:
	Implement contains_file and get_relative_path

2007-10-31  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsbackend.[ch]:	
        Add g_vfs_backend_get_mount_spec
	
        * daemon/gvfsjobqueryfsinfo.c:
	Fix indentation
	
        * daemon/gvfsjobqueryinfo.c:
	Implement id:fs attribute

2007-10-31  Alexander Larsson  <alexl@redhat.com>

	* client/gdaemonvolume.c:
	Remove get_platform_id
	
2007-10-31  Alexander Larsson  <alexl@redhat.com>

        * client/gdaemonfile.c:
	Implement find_enclosing_volume
	
        * client/gdaemonvolume.[ch]:
        * client/gdaemonvolumemonitor.c:
	No need to pass volume monitor when
	createing volumes

2007-10-31  Alexander Larsson  <alexl@redhat.com>

        * common/gmounttracker.[ch]:
	Add all mount info to GMountInfo
	Make it refcounted
	
        * client/gdaemonvfs.[ch]:
        * client/gdaemonfile.c:
        * client/gdaemonvolumemonitor.c:
	Remove GMountRef, replacing its use with
	GMountInfo

2007-10-31  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsjobqueryfsinfo.c:
	Remove volume name attribute

2007-10-31  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsbackendtrash.c:
	Update to new API
	
2007-10-30  Alexander Larsson  <alexl@redhat.com>

        * common/gmounttracker.c:
	Handle threads not being initialized
	
        * daemon/gvfsjobqueryfsinfo.c:
	Set volume name

2007-10-26  Alexander Larsson  <alexl@redhat.com>

        * client/gdaemonvolumemonitor.c:
	Don't show not user visible mounts

        * daemon/mount.c:
	Don't give fuse mounts for non visible mounts
	(as they don't get mounted)
	
        * daemon/gvfsbackendsmbbrowse.c:
        * daemon/gvfsbackendtrash.c:
	Mark as not user visible
	
2007-10-26  Alexander Larsson  <alexl@redhat.com>

        * common/gvfsdaemonprotocol.h:
	Add registerFuse call
	
        * client/gvfsfusedaemon.c:
	Register with vfs daemon
	Exit (and unmount) if daemon dies
	
        * daemon/mount.c:
	Hand out fuse mountpaths when availible.
	
        * client/gdaemonvfs.[ch]:
        * common/gmounttracker.c:
	Handle sent fuse mountpath
	
        * client/gdaemonfile.c:
	Implement g_daemon_file_get_path using fuse
	if availible.

2007-10-26  Alexander Larsson  <alexl@redhat.com>

        * client/Makefile.am:
        * client/gvfsfusedaemon.c:
	Update fuse daemon to use the giomodule instead of
	linking to a copy of the code. The old way was
	problematic with the module code being a dynamic
	type in the module and not in the fuse daemon.

2007-10-25  Alexander Larsson  <alexl@redhat.com>

        * client/smburi.c:
        * common/gvfsurimapper.[ch]:
	Make to_uri_scheme return const string.
	
        * client/gdaemonfile.[ch]:
        * client/gdaemonvfs.[ch]:
        Add _g_daemon_vfs_mountspec_has_uri_scheme and use it to
	implement g_file_has_uri_scheme

2007-10-24  Alexander Larsson  <alexl@redhat.com>

        * common/gmountsource.c:
        (g_mount_source_ask_password):
	Increase password dialog timeout to 30 minutes

2007-10-24  Alexander Larsson  <alexl@redhat.com>

        * common/gmountspec.c:
        (g_mount_spec_set_mount_prefix):
	Actually assign the mount_prefix in the GMountSpec

2007-10-23  Sebastian Dröge  <slomo@circular-chaos.org>

	* client/Makefile.am:
	Change the GIO module dir to $(libdir)/gio/modules as was
	done in GIO.

2007-10-23  Alexander Larsson  <alexl@redhat.com>

        * client/gdaemonfile.c:
        * client/gdaemonvfs.c:
        * common/gmountspec.[ch]:
	Ensure GDaemonFile mount specs are actually unique.
	When a non-unique mount spec was finalized any unique
	version of the same was removed from the hashtable.

2007-10-23  Alexander Larsson  <alexl@redhat.com>

        * client/gdaemonvfs.c:
        (_g_daemon_vfs_get_uri_for_mountspec):
	Better handling for default types.
	(Handle hostname, port and username)

2007-10-22  Alexander Larsson  <alexl@redhat.com>

        * client/gdaemonvfs.c:
        * common/gvfsuriutils.[ch]:
        * daemon/gvfsbackendtrash.c:
	Update to use the gurifuncs.h from gio.
	Fix filename parsing to handle ~/x

2007-10-19  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsbackend.[ch]:
	Rename set_icon -> set_icon_name
	Add getter for icon_name and display_name
	
        * daemon/gvfsbackendsmb.c:
        * daemon/gvfsbackendsmbbrowse.c:
	Update for API changes
	Set display name for in fileinfo

        * daemon/gvfsbackendsftp.c:
        * daemon/gvfsbackendtrash.c:
	Update for API changes

	
2007-10-19  Alexander Larsson  <alexl@redhat.com>

        * client/gdaemonfile.c:
        (g_daemon_file_hash): Faster hash, since mount_spec is unique
        (g_daemon_file_equal): Compare mount spec too
	
        * daemon/gvfsbackendsmb.c:
        * daemon/gvfsbackendsmbbrowse.c:
	Set volume display names and icons
	Set content type and icon for files

2007-10-19  Alexander Larsson  <alexl@redhat.com>

        * common/gmounttracker.[ch]:
        * client/gdaemonvfs.c:
        * daemon/mount.c:
	Add user_visible to mount info
	Reorder args so that new stuff comes at the end
	
        * daemon/gvfsbackend.[ch]:
	Add user_visible setting
	Fix up various setters that set the wrong variable
	
        * daemon/gvfsbackendtrash.c:
	Add icon and better display name

2007-10-19  Alexander Larsson  <alexl@redhat.com>

        * client/gdaemonvfs.[ch]:
        * client/gdaemonvolume.c:
        * client/gdaemonvolumemonitor.[ch]:
	Implement using DEFINE_DYNAMIC_TYPE
	Actually register GDaemonVolumeMonitor in giomodule
	
        * common/gmounttracker.c:
	Update to the on-dbus format for mounts

2007-10-19  Alexander Larsson  <alexl@redhat.com>

	* client/smburi.c (smb_to_uri):
	No port by default

2007-10-16  Alexander Larsson  <alexl@redhat.com>

        * client/gdaemonfile.c:
        (g_daemon_file_get_parent):
	Fix get_parent to handle files that are in the root directory

2007-10-16  Alexander Larsson  <alexl@redhat.com>

        * common/gvfsdaemonprotocol.[ch]:
	Make sending icons actually work
	
        * daemon/gvfsbackendtrash.c:
	Set icon for toplevel
	
        * daemon/gvfsmonitor.c:
        Initialize error before call

2007-10-12  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsdaemon.c:
	Build fixes
	Patch from Milosz Derezynski <internalerror@gmail.com>

2007-10-10  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsbackendtrash.c:
	Support file monitor on trash:/// (for icon)

2007-10-10  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsbackendtrash.c:
	Add support for directory monitor on root dir

2007-10-09  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsbackendtrash.c:
	Correctly handle len arg in unescape_pathname
	
2007-10-09  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsbackendtrash.c:
	Nicer filenames for things in the home trash.
	This is the common case, so lets make them look nice.

2007-10-09  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsbackendtrash.c:
	Check for trash dirs in fork to avoid getting stuck
	on e.g. hanged nfs dirs

2007-10-09  Alexander Larsson  <alexl@redhat.com>

        * client/Makefile.am:
        * client/gdaemonfile.c:
        * client/gdaemonfilemonitor.[ch]:
	Implement file monitor in client
	
        * common/gvfsdaemonprotocol.h:
        * daemon/gvfsbackend.c:
	Implement file monitor in daemon
	
        * daemon/gvfsbackendtrash.c:
	Implement file monitor in trash backend
	Make trash filename escaping nicer

2007-10-09  Alexander Larsson  <alexl@redhat.com>

        * configure.ac:
	Pull in gio-unix-2.0
	
        * daemon/gvfsbackendtrash.c:
	Use GUnixMounts instead of volume monitor
	This shows *all* mounts and avoids unnecessary stuff

2007-10-08  Alexander Larsson  <alexl@redhat.com>

        * common/gvfsdaemonprotocol.h:
	Add defines for monitoring
	
        * client/Makefile.am:
        * client/gdaemondirectorymonitor.[ch]: 
        * client/gdaemonfilemonitor.[ch]:
        * client/gdaemonfile.c:
	Add daemon directory monitor and initial work on file monitor
	
        * client/gdaemonfileenumerator.c:
	Make path_counter private
	Return DBUS_HANDLER_RESULT_HANDLED when handling messages.
	
        * client/gdaemonvfs.[ch]:
	Make _g_mount_ref_ref "public"
	
        * client/gvfsdaemondbus.c:
	Handle NULL callbacks for async calls
	
        * daemon/Makefile.am:
        * daemon/gvfsbackend.[ch]:
        * daemon/gvfsjobcreatemonitor.[ch]:
	Add create_dir_monitor and create_file_monitor.
	Add g_vfs_backend_get_daemon
	
        * daemon/gvfsmonitor.[ch]:
	Helper code for monitors
	
        * daemon/gvfsbackendtrash.c:
	Implement directory monitor for trash dirs

2007-10-08  Sebastian Dröge  <slomo@circular-chaos.org>

	* client/gdaemonvfs.c: (g_daemon_vfs_finalize),
	(g_daemon_vfs_init), (fill_supported_uri_schemes),
	(g_daemon_vfs_get_supported_uri_schemes),
	(g_daemon_vfs_class_init):
	* client/smburi.c: (smb_to_uri_scheme),
	(g_vfs_uri_mapper_smb_class_init):
	* common/gvfsdaemonprotocol.h:
	* common/gvfsurimapper.c: (g_vfs_uri_mapper_to_uri_scheme):
	* common/gvfsurimapper.h:
	* daemon/mount.c: (list_mount_types), (dbus_message_function):
	Implement get_supported_uri_schemes method and add a GVfsUriMapper
	method to map a mount spec to an URI scheme.

2007-10-05  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsbackendtrash.c:
        Add delete support to trash

2007-10-04  Alexander Larsson  <alexl@redhat.com>

        * common/gvfsuriutils.c:
        (g_uri_unescape_string):
	Allow NULL end pointer

        * daemon/gvfsjob.[ch]:
	Add cancellable to GVfsJob for backends that want one
	
        * daemon/gvfsjobenumerate.[ch]:
        * daemon/gvfsjobqueryinfo.[ch]:
	Also store attribute in string form.
	Needed if you want to pass it on into gio.
	
        * daemon/Makefile.am:
        * daemon/gvfsbackendtrash.[ch]:
        * daemon/trash.mount.in: Added.
	Added trash backend

2007-10-04  Alexander Larsson  <alexl@redhat.com>

        * TODO:
        * client/gdaemonfile.c:
        * client/gvfsfusedaemon.c:
        * daemon/gvfsbackend.h:
        * daemon/gvfsbackendftp.c:
        * daemon/gvfsbackendsftp.c:
        * daemon/gvfsbackendsmb.c:
        * daemon/gvfsjobopenforwrite.[ch]:
        * test/benchmark-gvfs-big-files.c:
        * test/benchmark-gvfs-small-files.c:
	Add GFileCreateFlags flag to open for write.
	No actual backend support yet though.

2007-10-02  Sebastian Dröge  <slomo@circular-chaos.org>

	* client/gdaemonfile.c: (g_daemon_file_append_to),
	(g_daemon_file_create), (g_daemon_file_replace):
	* test/benchmark-gvfs-big-files.c: (create_file):
	* test/benchmark-gvfs-small-files.c: (create_file): Update to API
	changes in gio.

	* daemon/gvfschannel.c:
	* daemon/gvfsreadchannel.c:
	* daemon/gvfswritechannel.c:
	* daemon/main.c:
	Drop unecessary includes.

2007-09-29  Sebastian Dröge  <slomo@circular-chaos.org>

	* configure.ac: Revert accidentally included local change.

2007-09-29  Sebastian Dröge  <slomo@circular-chaos.org>

	* configure.ac: Update to the new pkg-config filename.
	* gio-standalone.pc.in: Remove pkg-config file that belongs to gio.

2007-09-27  Sebastian Dröge  <slomo@circular-chaos.org>

	* daemon/gvfsbackendftp.c: (do_replace), (do_query_info),
	(do_query_fs_info), (do_enumerate):
	Update signatures for API changes in gio.

2007-09-25  Alexander Larsson  <alexl@redhat.com>

        * client/gvfsdaemondbus.c:
	Clear VfsConnectionData on creation
	(fixes read of uninitialized data on thread shutdown)
	
        * daemon/sftp.mount.in:
	Correct the type to "sftp"

2007-09-25  Alexander Larsson  <alexl@redhat.com>

        * daemon/mount.c:
	Return NOT_SUPPORTED error for unsupported uri types

2007-09-25  Alexander Larsson  <alexl@redhat.com>

        * client/gvfsfusedaemon.c:
        * daemon/gvfsbackendsmbbrowse.c:
	Update for G_IO_ERROR_NOT_MOUNTABLE_FILE name change

2007-09-25  Alexander Larsson  <alexl@redhat.com>

        * common/gmountoperationdbus.[ch]:
        * common/gmounttracker.[ch]:
	Pass in DBusConnection to use instead of using default one
	
        * client/gdaemonfile.c:
        * client/gdaemonvfs.[ch]:
        * client/gvfsdaemondbus.c:
	Use private dbus connection even for async calls, since the
	mainloop integration is conflicting with dbus-glib.
	This is a temporary measure until this is solved in a better way.
	
        * client/gdaemonvolumemonitor.c:
        * client/gvfsfusedaemon.c:
        * daemon/gvfsbackendsmbbrowse.c:
	Update to the API changes

2007-09-25  Sebastian Dröge  <slomo@circular-chaos.org>

	* client/gdaemonvfs.c: (g_daemon_vfs_finalize):
	Don't unref wrapped_vfs as it's just a pointer to the single instance
	return value of g_vfs_get_local().

2007-09-25  Sebastian Dröge  <slomo@circular-chaos.org>

	* client/gdaemonfile.c: (g_daemon_file_resolve_relative_path),
	(g_daemon_file_file_iface_init):
	* test/benchmark-gvfs-big-files.c: (create_file):
	* test/benchmark-gvfs-small-files.c: (create_file):
	Update for API change in GIO. g_file_resolve_relative was renamed
	to g_file_resolve_relative_path.

2007-09-25  Sebastian Dröge  <slomo@circular-chaos.org>

	* common/gmountspec.c: (g_mount_spec_to_dbus_with_path):
	* common/gvfsdaemonprotocol.c: (_g_dbus_append_file_attribute),
	(_g_dbus_append_file_info), (_g_dbus_append_attribute_info_list):
	* daemon/mount.c: (vfs_mount_to_dbus):
	Don't pass the contained signature when creating a DBus struct. Since
	DBus 1.1.0 this will lead to an assertion. The signature will filled
	automatically while adding values to the struct.

2007-09-17  Alexander Larsson  <alexl@redhat.com>

        * client/gdaemonfile.c:
        * client/gdaemonfileinputstream.c:
        * client/gdaemonfileoutputstream.c:
        * client/gvfsfusedaemon.c:
        * common/gvfsdaemonprotocol.h:
        * daemon/Makefile.am:
        * daemon/gvfsbackend.[ch]:
        * daemon/gvfsbackendftp.c:
        * daemon/gvfsbackendsftp.c:
        * daemon/gvfsbackendsmb.c:
        * daemon/gvfsbackendsmbbrowse.c:
        * daemon/gvfsbackendtest.c:
        * daemon/gvfsjobenumerate.h:
        * daemon/gvfsjobgetfsinfo.[ch]: Removed.
        * daemon/gvfsjobgetinfo.[ch]: Removed.
        * daemon/gvfsjobqueryfsinfo.[ch]: Added.
        * daemon/gvfsjobqueryinfo.[ch]: Added.
        * daemon/gvfsjobsetattribute.[ch]:
        * test/benchmark-gvfs-big-files.c:
        * test/benchmark-gvfs-small-files.c:
	Update with the get_info -> query_info rename in gio

2007-09-17  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsbackendsftp.c:
	Update to new GDataInputStream function names 

2007-09-14  Alexander Larsson  <alexl@redhat.com>

        * client/gdaemonfileoutputstream.c:
        (g_daemon_file_output_stream_get_etag):
	Update to new get_etag API.

2007-09-14  Alexander Larsson  <alexl@redhat.com>

        * daemon/gvfsbackendsftp.c:
	Add etag support for close on write

I stopped tracked changes here. Look at "git log" instead.
		
2006-09-28  Alexander Larsson  <alexl@redhat.com>

	* gfilesimple.[ch]:
	Move GFileSimple struct into c file	

2006-09-28  Alexander Larsson  <alexl@redhat.com>

	* gfile.[ch]:
	Add follow_symlinks argument to get_info
	
	* gfileinfo.[ch]:
	Some mask fixes
	
	* gfilesimple.c:
	More implementation work
	
	* glocalfileoutputstream.[ch]:
	Implement set_original_mtime and set_create_backup

2006-09-28  Alexander Larsson  <alexl@redhat.com>

	* Makefile:
	Add gfilesimple
	
	* gfile.[ch]:
	Add g_file_copy()
	Finish rename to parse_name
	Remove set_keep_open for now
	
	* gfilesimple.[ch]:
	Initial skeleton for GFileSimple
	Handle parse names
	
	* gvfssimple.c:
	Handle parse names

2006-09-28  Alexander Larsson  <alexl@redhat.com>

	* gfileenumerator.c:
	* gfileinfo.c:
	* gfileinputstream.c:
	* gfileoutputstream.c:
	* ginputstream.c:
	* glocalfileinputstream.c:
	* glocalfileoutputstream.c:
	* goutputstream.c:
	* gvfssimple.c:
	Use macro-created parent_class

2006-09-28  Alexander Larsson  <alexl@redhat.com>

	* gfile.c:
	* gvfs.[ch]:
	* gvfssimple.c:
	Clean up parse_name names.

2006-09-28  Alexander Larsson  <alexl@redhat.com>

	* gfile.[ch]:
	Add request flags & attributes
	Use FileStreams
	
	* gfileinputstream.h:
	* gfileoutputstream.h:
	Fix G_TYPE_... defines
	
	* glocalfileoutputstream.c:
	Small cleanups and mention gedit.

2006-09-27  Alexander Larsson  <alexl@redhat.com>

	* gfileinfo.[ch]:
	Added g_file_info_new, g_file_info_set_from_stat
	
	* glocalfileinputstream.c:
	* glocalfileoutputstream.c:
	Implemented get_file_info.

2006-09-27  Alexander Larsson  <alexl@redhat.com>

	* glocalfileoutputstream.c:
	Update implementation of final mtime

2006-09-27  Alexander Larsson  <alexl@redhat.com>

	* gfileinfo.h:
	* gfileinputstream.[ch]:
	* gfileoutputstream.[ch]:
	Flags & attributes in get_file_info

2006-09-27  Alexander Larsson  <alexl@redhat.com>

	* Makefile:
	* ginputstreamfile.[ch]:
	* goutputstreamfile.[ch]:
	* glocalfileinputstream.[ch]:
	* glocalfileoutputstream.[ch]:
	Rename local file streams and make them
	inherit from FileInput/OutputStream
	
	* test.c:
	Update

2006-09-27  Alexander Larsson  <alexl@redhat.com>

	* Makefile:
	* gfileinputstream.[ch]:
	* gfileoutputstream.[ch]:
	Add new classes.
	
	* gfileinfo.[ch]:
	Add flags, symlink_target and edit_name
	
	* ginputstream.[ch]
	* goutputstream.[ch]:
	Export close/pending state a bit
	
	* gvfserror.h:
	Add NOT_SUPPORTED

2006-09-27  Alexander Larsson  <alexl@redhat.com>

	* ginputstream.c:
	* goutputstream.c:
	Wrap async callback to automatically handle
	setting of pending, closed and ref/unref of the stream.

2006-09-27  Alexander Larsson  <alexl@redhat.com>

	reviewed by: <delete if not using a buddy>

	* ginputstream.c: (read_async_callback_wrapper),
	(g_input_stream_read_async), (skip_async_callback_wrapper),
	(g_input_stream_skip_async), (close_async_callback_wrapper),
	(g_input_stream_close_async), (read_op_report), (read_op_free),
	(g_input_stream_real_read_async), (skip_op_report), (skip_op_free),
	(g_input_stream_real_skip_async), (close_op_report),
	(close_op_free), (g_input_stream_real_close_async):
	* goutputstream.c: (write_async_callback_wrapper),
	(g_output_stream_write_async), (flush_async_callback_wrapper),
	(g_output_stream_flush_async), (close_async_callback_wrapper),
	(g_output_stream_close_async):

2006-09-27  Alexander Larsson  <alexl@redhat.com>

	* ginputstream.[ch]:
	Update of close and pending handling.
	
	* goutputstream.[ch]:
	Implement default async version
	
2006-09-27  Alexander Larsson  <alexl@redhat.com>

	* Makefile:
	Add output file streams
	
	* ginputstream.c: (g_input_stream_is_cancelled):
	Cleanup
	
	* ginputstreamfile.[ch]:
	remove get_fd.
	
	* goutputstream.[ch]:
	Add g_output_stream_is_cancelled
	Add padding
	Add cancel_async
	
	* goutputstreamfile.[ch]:
	Add new class
	
	* gvfserror.h:
	Add new errors
	
	* test.c:
	Some tests
	
2006-09-26  Alexander Larsson  <alexl@redhat.com>

	* Makefile:
	Add gthread-2.0
	
	* ginputstream.h:
	add async_skip and is_cancelled.
	
	* ginputstream.c:
	Implement async fallbacks using thread
	
	* ginputstreamfile.c:
	Handle cancellation
	
	* gioscheduler.c:
	Schedule cancelled jobs first
	Fix out-of-lock reads of job
	Add g_io_job_mark_done().
	
	* gioscheduler.h:
	Add g_io_job_mark_done().
	
	* test.c:
	Add some stream tests

